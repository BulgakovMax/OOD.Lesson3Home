package com.gmail.v.bulgakov.v;

import java.util.Arrays;
import java.util.Comparator;

public class Group {

	private Student[] array = new Student[10];

	public Group(Student[] array) {
		super();
		this.array = array;
	}

	public Group() {

	}

	public Student[] getArray() {
		return array;
	}

	public void setArray(Student[] array) {
		this.array = array;
	}

	public void add(Student addStudent) throws GroupFullException {

		if (addStudent == null) {

			throw new IllegalArgumentException("No student information"); // exception for error null
		}
		for (int i = 0; i < array.length; i++) {
			if (array[i] == null) {
				array[i] = addStudent;
				return;
			}
		}
		throw new GroupFullException();
	}

	public boolean deleteStudent(Student newStudent) {
		for (int i = 0; i < array.length; i++) {
			if (array[i] == newStudent) {
				array[i] = null;
				return true;
			}
		}
		return false;
	}

	public Student searchStudent(String name) {
		for (int i = 0; i < array.length; i++) {
			if (array[i] != null && array[i].getName() != null && array[i].getName().equalsIgnoreCase(name)) {
				return array[i];
			}
		}
		return null;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		Arrays.sort(array, new Comparator<Student>() {
			@Override
			public int compare(Student o1, Student o2) {
				if (o1 == null || o1.getName() == null) {
					return 1;
				}
				if (o2 == null || o2.getName() == null) {
					return -1;
				}
				if (o1 == null && o2 == null || (o1.getName() == null || o2.getName() == null)) {
					return 0;
				}
				return o1.getName().compareTo(o2.getName());
			}
		});
		for (int i = 0; i < array.length; i++) {
			if (array[i] != null) {
				sb.append(array[i].toString());
			}
		}
		return "Group:" + '\n' + sb.toString();
	}
}
